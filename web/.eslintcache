[{"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\index.js":"1","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\styles.js":"2","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\index.js":"3","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\router\\index.js":"4","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\styles.js":"5","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\car\\styles.js":"6","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\api\\index.js":"7","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\TaskCar\\styles.js":"8","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\index.js":"9","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\styles.js":"10","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\util\\get_macaddress.js":"11","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\home\\index.js":"12","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\TaskCar\\index.js":"13","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\car\\index.js":"14","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\home\\styles.js":"15","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\index.js":"16"},{"size":7791,"mtime":1615474927803,"results":"17","hashOfConfig":"18"},{"size":1516,"mtime":1615058802131,"results":"19","hashOfConfig":"18"},{"size":1567,"mtime":1615004369335,"results":"20","hashOfConfig":"18"},{"size":769,"mtime":1611966119015,"results":"21","hashOfConfig":"18"},{"size":1185,"mtime":1612208596690,"results":"22","hashOfConfig":"18"},{"size":1257,"mtime":1611333276604,"results":"23","hashOfConfig":"18"},{"size":124,"mtime":1613525893724,"results":"24","hashOfConfig":"18"},{"size":943,"mtime":1610556207664,"results":"25","hashOfConfig":"18"},{"size":996,"mtime":1612632412554,"results":"26","hashOfConfig":"18"},{"size":855,"mtime":1612028541374,"results":"27","hashOfConfig":"18"},{"size":93,"mtime":1611968595148,"results":"28","hashOfConfig":"18"},{"size":1160,"mtime":1612317430356,"results":"29","hashOfConfig":"18"},{"size":574,"mtime":1615475402979,"results":"30","hashOfConfig":"18"},{"size":1807,"mtime":1615474857077,"results":"31","hashOfConfig":"18"},{"size":553,"mtime":1612029291662,"results":"32","hashOfConfig":"18"},{"size":204,"mtime":1610556758731,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"gaosv0",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\index.js",["73","74","75","76","77","78","79","80","81","82","83","84","85"],"import React, {useState, useEffect} from 'react'\r\nimport * as S from './styles'\r\n\r\nimport api from '../../api'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport isConnected from '../../util/get_macaddress'\r\n\r\nimport back from '../../used/back.png'\r\n\r\nfunction Sell({match}){\r\n    const [error, setError] = useState()\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [redirectHome, setRedirectHome] = useState(false)\r\n    const [brand, setBrand] = useState()\r\n    const [price, setPrice] = useState()\r\n    const [model, setModel] = useState()\r\n    const [chassis, setChassis] = useState()\r\n    const [year, setYear] = useState()\r\n    const [km, setKm] = useState()\r\n    const [exchange, setExchange] = useState()\r\n    const [doors, setDoors] = useState()\r\n    const [color, setColor] = useState()\r\n    const [shield, setShield] = useState()\r\n    const [state, setState] = useState()\r\n    const [city, setCity] = useState()\r\n\r\n    async function saveSell(){\r\n        if(!brand){\r\n            setError(\"Marca é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!model){\r\n            setError(\"Modelo é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!price){\r\n            setError(\"Preço é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!chassis){\r\n            setError(\"Chassi é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(chassis.length < 7){\r\n            setError(\"Chassi não pode ser menor que 7 números!\")\r\n        }\r\n\r\n        else if(chassis.length > 7){\r\n            setError(\"Chassi não pode ser maior que 7 números!\")\r\n        }\r\n\r\n        else if(!year){\r\n            setError(\"Ano é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!km){\r\n            setError(\"KM/H é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!exchange){\r\n            setError(\"Câmbio é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!doors){\r\n            setError(\"Quantidade de postas são obrigatórias!\")\r\n        }\r\n\r\n        else if(!color){\r\n            setError(\"Cor é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!shield){\r\n            setError(\"Blindagem é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!state){\r\n            setError(\"Estado é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!city){\r\n            setError(\"Cidade é um campo obrigatório!\")\r\n        }\r\n\r\n        if(match.params.id){\r\n            await api.put(`/update/${match.params.id}`, {\r\n                macaddress: isConnected,\r\n                brand,\r\n                price,\r\n                model,\r\n                chassis,\r\n                year,\r\n                km,\r\n                exchange,\r\n                doors,\r\n                color,\r\n                shield,\r\n                state,\r\n                city\r\n            })\r\n            .then(() => {\r\n                if(brand != '' && price != '' && model != '' && chassis != '' && year != '' &&\r\n                km != '' && exchange != '' && doors != '' && color != '' && shield != '' &&\r\n                state != '' && city != ''){\r\n                    setRedirect(true)\r\n                }\r\n            })\r\n           \r\n        }\r\n        else{\r\n            await api.post('/', {\r\n                macaddress: isConnected,\r\n                brand,\r\n                price,\r\n                model,\r\n                chassis,\r\n                year,\r\n                km,\r\n                exchange,\r\n                doors,\r\n                color,\r\n                shield,\r\n                state,\r\n                city\r\n            })\r\n            .then(() => {\r\n                setRedirectHome(true)\r\n                window.location.reload()\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    async function updating(){\r\n        await api.get(`/filter/${match.params.id}`)\r\n        .then((response) => {\r\n            setBrand(response.data.brand)\r\n            setModel(response.data.model)\r\n            setPrice(response.data.price)\r\n            setChassis(response.data.chassis)\r\n            setYear(response.data.year)\r\n            setKm(response.data.km)\r\n            setExchange(response.data.exchange)\r\n            setDoors(response.data.doors)\r\n            setColor(response.data.color)\r\n            setShield(response.data.shield)\r\n            setState(response.data.state)\r\n            setCity(response.data.city)            \r\n        })\r\n    }\r\n\r\n    async function clear() {\r\n        setBrand('')\r\n        setPrice('')\r\n        setModel('')\r\n        setChassis('')\r\n        setYear('')\r\n        setKm('')\r\n        setExchange('')\r\n        setDoors('')\r\n        setColor('')\r\n        setShield('')\r\n        setState('')\r\n        setCity('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isConnected){\r\n            setRedirectHome(true)\r\n        }\r\n\r\n        updating()\r\n    }, [])\r\n\r\n    return(\r\n        <S.Container>\r\n                <h2>{error}</h2>\r\n\r\n                {redirect  && <Redirect to={`/filter/${match.params.id}`}/>}\r\n                {redirectHome && <Redirect to={'/'}/>}\r\n                <S.ContainerInput>\r\n                    {match.params.id && \r\n                        <Link to={`/filter/${match.params.id}`} className=\"containerBack\">\r\n                            <img src={back} alt=\"back\"/>\r\n                        </Link>\r\n                    }\r\n                    <label>Marca</label>\r\n                    <input type=\"text\" required value={brand} onChange={(e) => setBrand(e.target.value)}/>\r\n\r\n                    <label>modelo</label>\r\n                    <input type=\"text\" required value={model} onChange={(e) => setModel(e.target.value)}/>\r\n\r\n                    <label>R$</label>\r\n                    <input type=\"number\" required value={price} onChange={(e) => setPrice(e.target.value)}/>\r\n\r\n                    <label>Chassi</label>\r\n                    <input type=\"number\" required value={chassis} onChange={(e) => setChassis(e.target.value)}/>\r\n\r\n                    <label>Ano</label>\r\n                    <input type=\"number\" required value={year} onChange={(e) => setYear(e.target.value)}/>\r\n\r\n                    <label>Km/h</label>\r\n                    <input type=\"number\" required value={km} onChange={(e) => setKm(e.target.value)}/>\r\n\r\n                    <label>Câmbio</label>\r\n                    <input type=\"text\" required value={exchange} onChange={(e) => setExchange(e.target.value)}/>\r\n\r\n                    <label>Portas</label>\r\n                    <input type=\"number\" required value={doors} onChange={(e) => setDoors(e.target.value)}/>\r\n\r\n                    <label>Cor</label>\r\n                    <input type=\"text\" required value={color} onChange={(e) => setColor(e.target.value)}/>\r\n                    \r\n                    <label>Blindado</label>\r\n                    <input type=\"text\" required value={shield} onChange={(e) => setShield(e.target.value)}/>\r\n\r\n                    <label>Estado</label>\r\n                    <input type=\"text\" required value={state} onChange={(e) => setState(e.target.value)}/>\r\n\r\n                    <label>Cidade</label>\r\n                    <input type=\"text\" required value={city} onChange={(e) => setCity(e.target.value)}/>\r\n\r\n                    <S.ContainerButton>\r\n                        <button type=\"button\" onClick={saveSell}>Pronto</button>\r\n\r\n                        {\r\n                            brand && price && model && chassis && year &&\r\n                            km && exchange && doors && color && shield &&\r\n                            state && city && \r\n                            <button type=\"button\" onClick={clear} className=\"buttonClear\">Limpar tudo</button>\r\n                        }\r\n                    </S.ContainerButton>\r\n                </S.ContainerInput>\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default Sell","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\styles.js",[],["86","87"],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\index.js",["88","89","90"],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\router\\index.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\styles.js",[],["91","92"],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\car\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\api\\index.js",[],["93","94"],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\TaskCar\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\index.js",[],["95","96"],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\util\\get_macaddress.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\home\\index.js",["97"],"import React, {useState, useEffect} from 'react'\nimport { Redirect } from 'react-router-dom'\nimport * as S from './styles'\n\nimport TaskCar from '../../components/TaskCar';\nimport api from '../../api'\nimport logo from '../../used/car.png'\n\nimport isConnected from '../../util/get_macaddress'\n\nfunction Home() {\n  const[list, setList] = useState([])\n  const[redirect, setRedirect] = useState(false)\n\n  async function connectApI(){\n    await api.get(`/filter/all/${isConnected}`)\n    .then((response) => {\n      setList(response.data)\n    })\n  }\n\n  useEffect(() => {\n    if(!isConnected){\n      setRedirect(true)\n    }\n\n    connectApI()\n  }, [])\n\n  return (\n    <S.Container>   \n        {redirect && <Redirect to=\"/qrcode\"/>}   \n        <S.ContainerTaskCar>\n          {list == '' ? \n            <div className=\"ContainerInfo\">\n              <img src={logo} alt=\"Logo\"/>\n              <h1>Nenhum carro cadastrado!</h1>\n            </div>\n            :\n            list.map((l) => (\n              <TaskCar id={l._id} name={l.model} price={l.price} km={l.km}/>\n            ))\n          }\n        </S.ContainerTaskCar>\n    </S.Container>\n  );\n}\n\nexport default Home;\n","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\TaskCar\\index.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\car\\index.js",["98","99"],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\home\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\index.js",[],["100","101"],{"ruleId":"102","severity":1,"message":"103","line":101,"column":26,"nodeType":"104","messageId":"105","endLine":101,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":101,"column":41,"nodeType":"104","messageId":"105","endLine":101,"endColumn":43},{"ruleId":"102","severity":1,"message":"103","line":101,"column":56,"nodeType":"104","messageId":"105","endLine":101,"endColumn":58},{"ruleId":"102","severity":1,"message":"103","line":101,"column":73,"nodeType":"104","messageId":"105","endLine":101,"endColumn":75},{"ruleId":"102","severity":1,"message":"103","line":101,"column":87,"nodeType":"104","messageId":"105","endLine":101,"endColumn":89},{"ruleId":"102","severity":1,"message":"103","line":102,"column":20,"nodeType":"104","messageId":"105","endLine":102,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":102,"column":38,"nodeType":"104","messageId":"105","endLine":102,"endColumn":40},{"ruleId":"102","severity":1,"message":"103","line":102,"column":53,"nodeType":"104","messageId":"105","endLine":102,"endColumn":55},{"ruleId":"102","severity":1,"message":"103","line":102,"column":68,"nodeType":"104","messageId":"105","endLine":102,"endColumn":70},{"ruleId":"102","severity":1,"message":"103","line":102,"column":84,"nodeType":"104","messageId":"105","endLine":102,"endColumn":86},{"ruleId":"102","severity":1,"message":"103","line":103,"column":23,"nodeType":"104","messageId":"105","endLine":103,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":103,"column":37,"nodeType":"104","messageId":"105","endLine":103,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":172,"column":8,"nodeType":"108","endLine":172,"endColumn":10,"suggestions":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"102","severity":1,"message":"114","line":26,"column":84,"nodeType":"104","messageId":"105","endLine":26,"endColumn":86},{"ruleId":"102","severity":1,"message":"114","line":29,"column":88,"nodeType":"104","messageId":"105","endLine":29,"endColumn":90},{"ruleId":"102","severity":1,"message":"114","line":37,"column":96,"nodeType":"104","messageId":"105","endLine":37,"endColumn":98},{"ruleId":"110","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"110","replacedBy":"117"},{"ruleId":"112","replacedBy":"118"},{"ruleId":"110","replacedBy":"119"},{"ruleId":"112","replacedBy":"120"},{"ruleId":"102","severity":1,"message":"114","line":34,"column":17,"nodeType":"104","messageId":"105","endLine":34,"endColumn":19},{"ruleId":"102","severity":1,"message":"114","line":20,"column":12,"nodeType":"104","messageId":"105","endLine":20,"endColumn":14},{"ruleId":"106","severity":1,"message":"121","line":31,"column":6,"nodeType":"108","endLine":31,"endColumn":12,"suggestions":"122"},{"ruleId":"110","replacedBy":"123"},{"ruleId":"112","replacedBy":"124"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updating'. Either include it or remove the dependency array.","ArrayExpression",["125"],"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"Expected '===' and instead saw '=='.",["126"],["127"],["126"],["127"],["126"],["127"],"React Hook useEffect has a missing dependency: 'CarList'. Either include it or remove the dependency array.",["128"],["126"],["127"],{"desc":"129","fix":"130"},"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [updating]",{"range":"133","text":"134"},"Update the dependencies array to be: [CarList, list]",{"range":"135","text":"136"},[4784,4786],"[updating]",[761,767],"[CarList, list]"]