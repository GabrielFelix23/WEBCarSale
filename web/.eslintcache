[{"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\index.js":"1","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\styles.js":"2","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\index.js":"3","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\router\\index.js":"4","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\styles.js":"5","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\car\\styles.js":"6","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\api\\index.js":"7","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\TaskCar\\styles.js":"8","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\index.js":"9","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\styles.js":"10"},{"size":6510,"mtime":1611770107673,"results":"11","hashOfConfig":"12"},{"size":881,"mtime":1611769421376,"results":"13","hashOfConfig":"12"},{"size":579,"mtime":1611966154905,"results":"14","hashOfConfig":"12"},{"size":665,"mtime":1611330383916,"results":"15","hashOfConfig":"12"},{"size":708,"mtime":1610500265683,"results":"16","hashOfConfig":"12"},{"size":1257,"mtime":1611333276604,"results":"17","hashOfConfig":"12"},{"size":124,"mtime":1611254807527,"results":"18","hashOfConfig":"12"},{"size":943,"mtime":1610556207664,"results":"19","hashOfConfig":"12"},{"size":548,"mtime":1611968109988,"results":"20","hashOfConfig":"12"},{"size":855,"mtime":1611968085370,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"gaosv0",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\index.js",["44","45","46","47","48","49","50","51","52","53","54","55","56","57"],"import React, {useState, useEffect} from 'react'\r\nimport * as S from './styles'\r\n\r\nimport api from '../../api'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nfunction Sell({match}){\r\n    const [error, setError] = useState()\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [redirectHome, setRedirectHome] = useState(false)\r\n    const [brand, setBrand] = useState()\r\n    const [price, setPrice] = useState()\r\n    const [model, setModel] = useState()\r\n    const [chassis, setChassis] = useState()\r\n    const [year, setYear] = useState()\r\n    const [km, setKm] = useState()\r\n    const [exchange, setExchange] = useState()\r\n    const [doors, setDoors] = useState()\r\n    const [color, setColor] = useState()\r\n    const [shield, setShield] = useState()\r\n    const [state, setState] = useState()\r\n    const [city, setCity] = useState()\r\n    const [macaddress, setMacaddress] = useState('11:11:11:11:11:11')\r\n\r\n    async function saveSell(){\r\n        if(!brand){\r\n            setError(\"Marca é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!model){\r\n            setError(\"Modelo é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!price){\r\n            setError(\"Preço é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!chassis){\r\n            setError(\"Chassi é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(chassis.length < 7 || chassis.length > 7){\r\n            setError(\"Chassi é obrigatório ter 7 número!\")\r\n        }\r\n\r\n        else if(!year){\r\n            setError(\"Ano é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!km){\r\n            setError(\"KM/H é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!exchange){\r\n            setError(\"Câmbio é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!doors){\r\n            setError(\"Quantidade de postas são obrigatórias!\")\r\n        }\r\n\r\n        else if(!color){\r\n            setError(\"Cor é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!shield){\r\n            setError(\"Blindagem é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!state){\r\n            setError(\"Estado é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!city){\r\n            setError(\"Cidade é um campo obrigatório!\")\r\n        }\r\n\r\n        if(match.params.id){\r\n            await api.put(`/update/${match.params.id}`, {\r\n                macaddress,\r\n                brand,\r\n                price,\r\n                model,\r\n                chassis,\r\n                year,\r\n                km,\r\n                exchange,\r\n                doors,\r\n                color,\r\n                shield,\r\n                state,\r\n                city\r\n            })\r\n            .then(() => {\r\n                if(brand != '' && price != '' && model != '' && chassis != '' && year != '' &&\r\n                km != '' && exchange != '' && doors != '' && color != '' && shield != '' &&\r\n                state != '' && city != ''){\r\n                    setRedirect(true)\r\n                }\r\n            })\r\n           \r\n        }\r\n        else{\r\n            await api.post('/', {\r\n                macaddress,\r\n                brand,\r\n                price,\r\n                model,\r\n                chassis,\r\n                year,\r\n                km,\r\n                exchange,\r\n                doors,\r\n                color,\r\n                shield,\r\n                state,\r\n                city\r\n            })\r\n            .then(() => {\r\n                setRedirectHome(true)\r\n            })\r\n        }\r\n    }\r\n\r\n    async function updating(){\r\n        await api.get(`/filter/${match.params.id}`)\r\n        .then((response) => {\r\n            setBrand(response.data.brand)\r\n            setModel(response.data.model)\r\n            setPrice(response.data.price)\r\n            setChassis(response.data.chassis)\r\n            setYear(response.data.year)\r\n            setKm(response.data.km)\r\n            setExchange(response.data.exchange)\r\n            setDoors(response.data.doors)\r\n            setColor(response.data.color)\r\n            setShield(response.data.shield)\r\n            setState(response.data.state)\r\n            setCity(response.data.city)            \r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        updating()\r\n    }, [])\r\n\r\n    return(\r\n        <S.Container>\r\n                <h2>{error}</h2>\r\n\r\n                {redirect  && <Redirect to={`/filter/${match.params.id}`}/>}\r\n                {redirectHome && <Redirect to={'/'}/>}\r\n                <S.ContainerInput>\r\n                    <label>Marca</label>\r\n                    <input type=\"text\" required value={brand} onChange={(e) => setBrand(e.target.value)}/>\r\n\r\n                    <label>modelo</label>\r\n                    <input type=\"text\" required value={model} onChange={(e) => setModel(e.target.value)}/>\r\n\r\n                    <label>Preço</label>\r\n                    <input type=\"text\" required value={price} onChange={(e) => setPrice(e.target.value)}/>\r\n\r\n                    <label>Chassi</label>\r\n                    <input type=\"number\" required value={chassis} onChange={(e) => setChassis(e.target.value)}/>\r\n\r\n                    <label>Ano</label>\r\n                    <input type=\"text\" required value={year} onChange={(e) => setYear(e.target.value)}/>\r\n\r\n                    <label>Km/H</label>\r\n                    <input type=\"number\" required value={km} onChange={(e) => setKm(e.target.value)}/>\r\n\r\n                    <label>Câmbio</label>\r\n                    <input type=\"text\" required value={exchange} onChange={(e) => setExchange(e.target.value)}/>\r\n\r\n                    <label>Portas</label>\r\n                    <input type=\"number\" required value={doors} onChange={(e) => setDoors(e.target.value)}/>\r\n\r\n                    <label>Cor</label>\r\n                    <input type=\"text\" required value={color} onChange={(e) => setColor(e.target.value)}/>\r\n                    \r\n                    <label>Blindado</label>\r\n                    <input type=\"text\" required value={shield} onChange={(e) => setShield(e.target.value)}/>\r\n\r\n                    <label>Estado</label>\r\n                    <input type=\"text\" required value={state} onChange={(e) => setState(e.target.value)}/>\r\n\r\n                    <label>Cidade</label>\r\n                    <input type=\"text\" required value={city} onChange={(e) => setCity(e.target.value)}/>\r\n\r\n                    <button type=\"button\" onClick={saveSell}>Pronto</button>\r\n                </S.ContainerInput>\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default Sell",["58","59"],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\index.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\router\\index.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\car\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\api\\index.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\TaskCar\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\index.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\styles.js",[],{"ruleId":"60","severity":1,"message":"61","line":23,"column":24,"nodeType":"62","messageId":"63","endLine":23,"endColumn":37},{"ruleId":"64","severity":1,"message":"65","line":95,"column":26,"nodeType":"66","messageId":"67","endLine":95,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":95,"column":41,"nodeType":"66","messageId":"67","endLine":95,"endColumn":43},{"ruleId":"64","severity":1,"message":"65","line":95,"column":56,"nodeType":"66","messageId":"67","endLine":95,"endColumn":58},{"ruleId":"64","severity":1,"message":"65","line":95,"column":73,"nodeType":"66","messageId":"67","endLine":95,"endColumn":75},{"ruleId":"64","severity":1,"message":"65","line":95,"column":87,"nodeType":"66","messageId":"67","endLine":95,"endColumn":89},{"ruleId":"64","severity":1,"message":"65","line":96,"column":20,"nodeType":"66","messageId":"67","endLine":96,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":96,"column":38,"nodeType":"66","messageId":"67","endLine":96,"endColumn":40},{"ruleId":"64","severity":1,"message":"65","line":96,"column":53,"nodeType":"66","messageId":"67","endLine":96,"endColumn":55},{"ruleId":"64","severity":1,"message":"65","line":96,"column":68,"nodeType":"66","messageId":"67","endLine":96,"endColumn":70},{"ruleId":"64","severity":1,"message":"65","line":96,"column":84,"nodeType":"66","messageId":"67","endLine":96,"endColumn":86},{"ruleId":"64","severity":1,"message":"65","line":97,"column":23,"nodeType":"66","messageId":"67","endLine":97,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":97,"column":37,"nodeType":"66","messageId":"67","endLine":97,"endColumn":39},{"ruleId":"68","severity":1,"message":"69","line":145,"column":8,"nodeType":"70","endLine":145,"endColumn":10,"suggestions":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},"no-unused-vars","'setMacaddress' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updating'. Either include it or remove the dependency array.","ArrayExpression",["76"],"no-native-reassign",["77"],"no-negated-in-lhs",["78"],{"desc":"79","fix":"80"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [updating]",{"range":"81","text":"82"},[4204,4206],"[updating]"]