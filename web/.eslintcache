[{"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\index.js":"1","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\styles.js":"2","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\index.js":"3","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\router\\index.js":"4","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\styles.js":"5","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\car\\styles.js":"6","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\api\\index.js":"7","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\TaskCar\\styles.js":"8","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\index.js":"9","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\styles.js":"10","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\util\\get_macaddress.js":"11","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\home\\index.js":"12","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\TaskCar\\index.js":"13","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\car\\index.js":"14","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\home\\styles.js":"15","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\index.js":"16"},{"size":7455,"mtime":1612320551425,"results":"17","hashOfConfig":"18"},{"size":1359,"mtime":1612320456896,"results":"19","hashOfConfig":"18"},{"size":1567,"mtime":1612223493043,"results":"20","hashOfConfig":"18"},{"size":769,"mtime":1611966119015,"results":"21","hashOfConfig":"18"},{"size":1185,"mtime":1612208596690,"results":"22","hashOfConfig":"18"},{"size":1257,"mtime":1611333276604,"results":"23","hashOfConfig":"18"},{"size":124,"mtime":1611254807527,"results":"24","hashOfConfig":"18"},{"size":943,"mtime":1610556207664,"results":"25","hashOfConfig":"18"},{"size":996,"mtime":1612632412554,"results":"26","hashOfConfig":"18"},{"size":855,"mtime":1612028541374,"results":"27","hashOfConfig":"18"},{"size":93,"mtime":1611968595148,"results":"28","hashOfConfig":"18"},{"size":1160,"mtime":1612317430356,"results":"29","hashOfConfig":"18"},{"size":598,"mtime":1611975145421,"results":"30","hashOfConfig":"18"},{"size":1779,"mtime":1611973614869,"results":"31","hashOfConfig":"18"},{"size":553,"mtime":1612029291662,"results":"32","hashOfConfig":"18"},{"size":204,"mtime":1610556758731,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"gaosv0",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\index.js",["74","75","76","77","78","79","80","81","82","83","84","85","86"],"import React, {useState, useEffect} from 'react'\r\nimport * as S from './styles'\r\n\r\nimport api from '../../api'\r\nimport { Redirect } from 'react-router-dom'\r\nimport isConnected from '../../util/get_macaddress'\r\n\r\nfunction Sell({match}){\r\n    const [error, setError] = useState()\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [redirectHome, setRedirectHome] = useState(false)\r\n    const [brand, setBrand] = useState()\r\n    const [price, setPrice] = useState()\r\n    const [model, setModel] = useState()\r\n    const [chassis, setChassis] = useState()\r\n    const [year, setYear] = useState()\r\n    const [km, setKm] = useState()\r\n    const [exchange, setExchange] = useState()\r\n    const [doors, setDoors] = useState()\r\n    const [color, setColor] = useState()\r\n    const [shield, setShield] = useState()\r\n    const [state, setState] = useState()\r\n    const [city, setCity] = useState()\r\n\r\n    async function saveSell(){\r\n        if(!brand){\r\n            setError(\"Marca é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!model){\r\n            setError(\"Modelo é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!price){\r\n            setError(\"Preço é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!chassis){\r\n            setError(\"Chassi é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(chassis.length < 7){\r\n            setError(\"Chassi não pode ser menor que 7 números!\")\r\n        }\r\n\r\n        else if(chassis.length > 7){\r\n            setError(\"Chassi não pode ser maior que 7 números!\")\r\n        }\r\n\r\n        else if(!year){\r\n            setError(\"Ano é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!km){\r\n            setError(\"KM/H é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!exchange){\r\n            setError(\"Câmbio é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!doors){\r\n            setError(\"Quantidade de postas são obrigatórias!\")\r\n        }\r\n\r\n        else if(!color){\r\n            setError(\"Cor é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!shield){\r\n            setError(\"Blindagem é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!state){\r\n            setError(\"Estado é um campo obrigatório!\")\r\n        }\r\n\r\n        else if(!city){\r\n            setError(\"Cidade é um campo obrigatório!\")\r\n        }\r\n\r\n        if(match.params.id){\r\n            await api.put(`/update/${match.params.id}`, {\r\n                macaddress: isConnected,\r\n                brand,\r\n                price,\r\n                model,\r\n                chassis,\r\n                year,\r\n                km,\r\n                exchange,\r\n                doors,\r\n                color,\r\n                shield,\r\n                state,\r\n                city\r\n            })\r\n            .then(() => {\r\n                if(brand != '' && price != '' && model != '' && chassis != '' && year != '' &&\r\n                km != '' && exchange != '' && doors != '' && color != '' && shield != '' &&\r\n                state != '' && city != ''){\r\n                    setRedirect(true)\r\n                }\r\n            })\r\n           \r\n        }\r\n        else{\r\n            await api.post('/', {\r\n                macaddress: isConnected,\r\n                brand,\r\n                price,\r\n                model,\r\n                chassis,\r\n                year,\r\n                km,\r\n                exchange,\r\n                doors,\r\n                color,\r\n                shield,\r\n                state,\r\n                city\r\n            })\r\n            .then(() => {\r\n                setRedirectHome(true)\r\n            })\r\n        }\r\n    }\r\n\r\n    async function updating(){\r\n        await api.get(`/filter/${match.params.id}`)\r\n        .then((response) => {\r\n            setBrand(response.data.brand)\r\n            setModel(response.data.model)\r\n            setPrice(response.data.price)\r\n            setChassis(response.data.chassis)\r\n            setYear(response.data.year)\r\n            setKm(response.data.km)\r\n            setExchange(response.data.exchange)\r\n            setDoors(response.data.doors)\r\n            setColor(response.data.color)\r\n            setShield(response.data.shield)\r\n            setState(response.data.state)\r\n            setCity(response.data.city)            \r\n        })\r\n    }\r\n\r\n    async function clear() {\r\n        setBrand('')\r\n        setPrice('')\r\n        setModel('')\r\n        setChassis('')\r\n        setYear('')\r\n        setKm('')\r\n        setExchange('')\r\n        setDoors('')\r\n        setColor('')\r\n        setShield('')\r\n        setState('')\r\n        setCity('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isConnected){\r\n            setRedirectHome(true)\r\n        }\r\n\r\n        updating()\r\n    }, [])\r\n\r\n    return(\r\n        <S.Container>\r\n                <h2>{error}</h2>\r\n\r\n                {redirect  && <Redirect to={`/filter/${match.params.id}`}/>}\r\n                {redirectHome && <Redirect to={'/'}/>}\r\n                <S.ContainerInput>\r\n                    <label>Marca</label>\r\n                    <input type=\"text\" required value={brand} onChange={(e) => setBrand(e.target.value)}/>\r\n\r\n                    <label>modelo</label>\r\n                    <input type=\"text\" required value={model} onChange={(e) => setModel(e.target.value)}/>\r\n\r\n                    <label>Preço</label>\r\n                    <input type=\"number\" required value={price} onChange={(e) => setPrice(e.target.value)}/>\r\n\r\n                    <label>Chassi</label>\r\n                    <input type=\"number\" required value={chassis} onChange={(e) => setChassis(e.target.value)}/>\r\n\r\n                    <label>Ano</label>\r\n                    <input type=\"number\" required value={year} onChange={(e) => setYear(e.target.value)}/>\r\n\r\n                    <label>Km/H</label>\r\n                    <input type=\"number\" required value={km} onChange={(e) => setKm(e.target.value)}/>\r\n\r\n                    <label>Câmbio</label>\r\n                    <input type=\"text\" required value={exchange} onChange={(e) => setExchange(e.target.value)}/>\r\n\r\n                    <label>Portas</label>\r\n                    <input type=\"number\" required value={doors} onChange={(e) => setDoors(e.target.value)}/>\r\n\r\n                    <label>Cor</label>\r\n                    <input type=\"text\" required value={color} onChange={(e) => setColor(e.target.value)}/>\r\n                    \r\n                    <label>Blindado</label>\r\n                    <input type=\"text\" required value={shield} onChange={(e) => setShield(e.target.value)}/>\r\n\r\n                    <label>Estado</label>\r\n                    <input type=\"text\" required value={state} onChange={(e) => setState(e.target.value)}/>\r\n\r\n                    <label>Cidade</label>\r\n                    <input type=\"text\" required value={city} onChange={(e) => setCity(e.target.value)}/>\r\n\r\n                    <S.ContainerButton>\r\n                        <button type=\"button\" onClick={saveSell}>Pronto</button>\r\n\r\n                        {\r\n                            brand && price && model && chassis && year &&\r\n                            km && exchange && doors && color && shield &&\r\n                            state && city && \r\n                            <button type=\"button\" onClick={clear} className=\"buttonClear\">Limpar tudo</button>\r\n                        }\r\n                    </S.ContainerButton>\r\n                </S.ContainerInput>\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default Sell",["87","88"],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\sell\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\index.js",["89","90","91"],"import React, {useState} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport {IoMdExit} from 'react-icons/io'\r\n\r\nimport * as S from './styles'\r\n\r\nimport logo from '../../used/logo.png'\r\nimport isConnected from '../../util/get_macaddress'\r\n\r\nfunction Header(){\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [actived, setActived] = useState(isConnected ? 'home' : 'qrcode')\r\n\r\n    async function Exit() {\r\n        await localStorage.removeItem('@CarSale/macaddress')\r\n        setRedirect(true)\r\n        window.location.reload()\r\n    }\r\n\r\n    return(\r\n        <S.Container>\r\n            {redirect && <Redirect to=\"/qrcode\"/>}\r\n\r\n            <img src={logo} alt=\"Logo\"/>\r\n            <S.Nav>\r\n                <Link to=\"/\" onClick={() => setActived('home')} className={actived == 'home' ? 'linkActived' : 'linkInative'}>Home</Link>\r\n                <small className=\"divider\"/>\r\n\r\n                <Link to=\"/sell\" onClick={() => setActived('sell')} className={actived == 'sell' ? 'linkActived' : 'linkInative'}>Vender veículos</Link>\r\n                <small className=\"divider\"/>\r\n\r\n                {isConnected ? \r\n                    <button type=\"button\" onClick={Exit}>\r\n                        <IoMdExit/>\r\n                    </button>\r\n                    :\r\n                    <Link to=\"/qrcode\" onClick={() => setActived('qrcode')} className={actived == 'qrcode' ? 'linkActived' : 'linkInative'}>Vincular com Celular</Link>\r\n                }\r\n            </S.Nav>\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\router\\index.js",[],["92","93"],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\header\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\car\\styles.js",[],["94","95"],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\api\\index.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\TaskCar\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\index.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\qrcode\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\util\\get_macaddress.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\home\\index.js",["96"],"import React, {useState, useEffect} from 'react'\nimport { Redirect } from 'react-router-dom'\nimport * as S from './styles'\n\nimport TaskCar from '../../components/TaskCar';\nimport api from '../../api'\nimport logo from '../../used/car.png'\n\nimport isConnected from '../../util/get_macaddress'\n\nfunction Home() {\n  const[list, setList] = useState([])\n  const[redirect, setRedirect] = useState(false)\n\n  async function connectApI(){\n    await api.get(`/filter/all/${isConnected}`)\n    .then((response) => {\n      setList(response.data)\n    })\n  }\n\n  useEffect(() => {\n    if(!isConnected){\n      setRedirect(true)\n    }\n\n    connectApI()\n  }, [])\n\n  return (\n    <S.Container>   \n        {redirect && <Redirect to=\"/qrcode\"/>}   \n        <S.ContainerTaskCar>\n          {list == '' ? \n            <div className=\"ContainerInfo\">\n              <img src={logo} alt=\"Logo\"/>\n              <h1>Nenhum carro cadastrado!</h1>\n            </div>\n            :\n            list.map((l) => (\n              <TaskCar id={l._id} name={l.model} price={l.price} km={l.km}/>\n            ))\n          }\n        </S.ContainerTaskCar>\n    </S.Container>\n  );\n}\n\nexport default Home;\n","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\components\\TaskCar\\index.js",["97","98"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport * as S from './styles'\r\n\r\nimport car from '../../used/car.png'\r\n\r\nfunction TaskCar({id, name, price, km}) {\r\n  return (\r\n    <S.Container>\r\n        <S.Box>\r\n            <img src={car} alt=\"Car\"/>\r\n            <S.Value>\r\n                <small>Carro: {name}</small>\r\n                <small>R$ {price}</small>\r\n                <small>KM/H {km}</small>\r\n            </S.Value>\r\n            <Link to={`/filter/${id}`}>Ver +</Link>\r\n        </S.Box>\r\n    </S.Container>\r\n  )\r\n}\r\n\r\nexport default TaskCar\r\n","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\car\\index.js",["99","100"],"import React, {useState, useEffect} from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport * as S from './styles'\r\n\r\nimport api from '../../api/'\r\n\r\nfunction Car({match}) {\r\n  const [list, setList] = useState([])\r\n  const [redirect, setRedirect] = useState(false)\r\n\r\n  async function CarList(){ \r\n    await api.get(`/filter/${match.params.id}`)\r\n      .then((response) => {\r\n        setList(response.data)\r\n      })\r\n  }\r\n\r\n  async function clear(){\r\n    const res = window.confirm(\"Deseja realmente deletar a postagem?\")\r\n    if(res == true){\r\n      await api.delete(`/delete/${match.params.id}`)\r\n      .then(() => {\r\n        setRedirect(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    CarList()\r\n  }, [list])\r\n\r\n  return (\r\n    <S.Container>  \r\n      \r\n        {redirect && <Redirect to=\"/\"/>}\r\n        <S.ContainerTaskCar>  \r\n          <S.TaskCar>\r\n            <h3>Marca: {list.brand}</h3>\r\n            <h3>Modelo: {list.model}</h3>\r\n            <h3>Preço: {list.price}</h3>\r\n            <h3>Chassi: {list.chassis}</h3>\r\n            <h3>Ano: {list.year}</h3>\r\n            <h3>KM/H: {list.km}</h3>\r\n            <h3>Câmbio: {list.exchange}</h3>\r\n            <h3>Portas: {list.doors}</h3>\r\n            <h3>Cor: {list.color}</h3>\r\n            <h3>Blingado: {list.shield}</h3>\r\n            <h3>Estado: {list.state}</h3>\r\n            <h3>Cidade: {list.city}</h3>\r\n          </S.TaskCar>  \r\n        </S.ContainerTaskCar>\r\n        \r\n        <S.ContainerButtons>\r\n          <Link className=\"backButton\" to='/'>Voltar</Link>\r\n          <Link className=\"editButton\" to={`/sell/${list._id}`}>Editar</Link>\r\n          <Link className=\"deleteButton\" onClick={clear}>Deletar</Link>\r\n        </S.ContainerButtons>\r\n    </S.Container>\r\n  )\r\n}\r\n\r\nexport default Car;\r\n","C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\views\\home\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\WEBCarSale\\web\\src\\index.js",[],{"ruleId":"101","severity":1,"message":"102","line":99,"column":26,"nodeType":"103","messageId":"104","endLine":99,"endColumn":28},{"ruleId":"101","severity":1,"message":"102","line":99,"column":41,"nodeType":"103","messageId":"104","endLine":99,"endColumn":43},{"ruleId":"101","severity":1,"message":"102","line":99,"column":56,"nodeType":"103","messageId":"104","endLine":99,"endColumn":58},{"ruleId":"101","severity":1,"message":"102","line":99,"column":73,"nodeType":"103","messageId":"104","endLine":99,"endColumn":75},{"ruleId":"101","severity":1,"message":"102","line":99,"column":87,"nodeType":"103","messageId":"104","endLine":99,"endColumn":89},{"ruleId":"101","severity":1,"message":"102","line":100,"column":20,"nodeType":"103","messageId":"104","endLine":100,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":100,"column":38,"nodeType":"103","messageId":"104","endLine":100,"endColumn":40},{"ruleId":"101","severity":1,"message":"102","line":100,"column":53,"nodeType":"103","messageId":"104","endLine":100,"endColumn":55},{"ruleId":"101","severity":1,"message":"102","line":100,"column":68,"nodeType":"103","messageId":"104","endLine":100,"endColumn":70},{"ruleId":"101","severity":1,"message":"102","line":100,"column":84,"nodeType":"103","messageId":"104","endLine":100,"endColumn":86},{"ruleId":"101","severity":1,"message":"102","line":101,"column":23,"nodeType":"103","messageId":"104","endLine":101,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":101,"column":37,"nodeType":"103","messageId":"104","endLine":101,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":168,"column":8,"nodeType":"107","endLine":168,"endColumn":10,"suggestions":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"101","severity":1,"message":"113","line":26,"column":84,"nodeType":"103","messageId":"104","endLine":26,"endColumn":86},{"ruleId":"101","severity":1,"message":"113","line":29,"column":88,"nodeType":"103","messageId":"104","endLine":29,"endColumn":90},{"ruleId":"101","severity":1,"message":"113","line":37,"column":96,"nodeType":"103","messageId":"104","endLine":37,"endColumn":98},{"ruleId":"109","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"109","replacedBy":"116"},{"ruleId":"111","replacedBy":"117"},{"ruleId":"101","severity":1,"message":"113","line":34,"column":17,"nodeType":"103","messageId":"104","endLine":34,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"122","line":1,"column":26,"nodeType":"120","messageId":"121","endLine":1,"endColumn":35},{"ruleId":"101","severity":1,"message":"113","line":20,"column":12,"nodeType":"103","messageId":"104","endLine":20,"endColumn":14},{"ruleId":"105","severity":1,"message":"123","line":30,"column":6,"nodeType":"107","endLine":30,"endColumn":12,"suggestions":"124"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updating'. Either include it or remove the dependency array.","ArrayExpression",["125"],"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"Expected '===' and instead saw '=='.",["126"],["127"],["126"],["127"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'CarList'. Either include it or remove the dependency array.",["128"],{"desc":"129","fix":"130"},"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [updating]",{"range":"133","text":"134"},"Update the dependencies array to be: [CarList, list]",{"range":"135","text":"136"},[4692,4694],"[updating]",[727,733],"[CarList, list]"]